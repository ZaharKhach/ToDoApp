{"version":3,"file":"bundle.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B,2BAA2B,SAAS,IAAI,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,C","sources":["webpack:///./js/main.js"],"sourcesContent":["window.addEventListener('DOMContentLoaded', () => {\r\n    //variables\r\n    const form = document.querySelector('#form'),\r\n        taskInput = document.querySelector('#taskInput'),\r\n        tasksInput = document.querySelector('#tasksList');\r\n\r\n    let arrayTasks = [];\r\n\r\n    if (localStorage.getItem('tasks')) {\r\n        arrayTasks = JSON.parse(localStorage.getItem('tasks'));\r\n        arrayTasks.forEach(element => renderTask(element))\r\n    }\r\n\r\n\r\n    checkEmptyList();\r\n\r\n    form.addEventListener('submit', addTask);\r\n    tasksInput.addEventListener('click', deleteTask);\r\n    tasksInput.addEventListener('click', doneTask)\r\n\r\n    //FUNCTIONS\r\n    function addTask(event) {\r\n        event.preventDefault();\r\n\r\n        const newTask = {\r\n            id: Date.now(),\r\n            text: taskInput.value,\r\n            done: false\r\n        }\r\n        arrayTasks.push(newTask);\r\n        saveLocalStorage();\r\n\r\n        renderTask(newTask);\r\n\r\n        taskInput.value = \"\";\r\n        taskInput.focus();\r\n\r\n        checkEmptyList();\r\n    }\r\n\r\n    function deleteTask(event) {\r\n        if (event.target.getAttribute('data-action') !== 'delete') return;\r\n\r\n        const parentNode = event.target.closest('.list-group-item');\r\n\r\n        arrayTasks.forEach(element => {\r\n            if (element.id == parentNode.getAttribute('id')) {\r\n                arrayTasks = arrayTasks.filter(el => el !== element);\r\n                saveLocalStorage();\r\n            }\r\n        })\r\n\r\n        parentNode.remove();\r\n        checkEmptyList()\r\n    }\r\n\r\n    function doneTask(event) {\r\n        if (event.target.getAttribute('data-action') !== 'done') return;\r\n\r\n        const parentNode = event.target.closest('.list-group-item');\r\n        const span = parentNode.querySelector('.task-title');\r\n\r\n        arrayTasks.forEach(element => {\r\n            if (span.textContent == element.text) {\r\n                span.classList.toggle('task-title--done');\r\n                element.done = element.done ? false : true;\r\n            }\r\n        });\r\n        saveLocalStorage();\r\n        //    parentNode.classList.add('gray');\r\n    }\r\n\r\n    function checkEmptyList() {\r\n        if (arrayTasks.length === 0) {\r\n            const wrapper = `\r\n                    <li id=\"emptyList\" class=\"list-group-item empty-list\">\r\n                        <img src=\"./img/leaf.svg\" alt=\"Empty\" width=\"48\" class=\"mt-3\">\r\n                        <div class=\"empty-list__title\">Список дел пуст</div>\r\n                    </li>`;\r\n            tasksInput.insertAdjacentHTML('afterbegin', wrapper)\r\n        }\r\n\r\n        if (arrayTasks.length >= 1) {\r\n            const emptylistEl = document.querySelector('#emptyList');\r\n            emptylistEl ? emptylistEl.remove() : null;\r\n        }\r\n    }\r\n\r\n    function saveLocalStorage() {\r\n        localStorage.setItem('tasks', JSON.stringify(arrayTasks));\r\n\r\n    }\r\n\r\n    function renderTask(task) {\r\n        const cssClass = task.done ? \"task-title task-title--done\" : \"task-title\";\r\n\r\n        const wrapperHTML = `\t\t\t\t\r\n        <li id=\"${task.id}\" class=\"list-group-item d-flex justify-content-between task-item\" id=\"notEnemyList\">\r\n            <span class=\"${cssClass}\">${task.text}</span>\r\n            <div class=\"task-item__buttons\">\r\n              <button type=\"button\" data-action=\"done\" class=\"btn-action\">\r\n                 <img src=\"./img/tick.svg\" alt=\"Done\" width=\"18\" height=\"18\">\r\n             </button>\r\n             <button type=\"button\" data-action=\"delete\" class=\"btn-action\">\r\n                    <img src=\"./img/cross.svg\" alt=\"Done\" width=\"18\" height=\"18\">\r\n              </button>\r\n            </div>\r\n         </li>`;\r\n        tasksInput.insertAdjacentHTML(\"beforeend\", wrapperHTML);\r\n    }\r\n})"],"names":[],"sourceRoot":""}